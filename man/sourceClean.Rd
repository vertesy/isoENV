% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isoENV.R
\name{sourceClean}
\alias{sourceClean}
\title{Source a script with strict environment control}
\usage{
sourceClean(
  path,
  input.variables,
  output.variables = input.variables,
  passAllFunctions = FALSE,
  input.functions = isoENV:::.findFunctions(),
  returnEnv = TRUE,
  removeBigObjs = TRUE,
  max.size = 1e+06,
  ...
)
}
\arguments{
\item{path}{The file path of the R script to be sourced.}

\item{input.variables}{A character vector of global variable names to be passed on.}

\item{output.variables}{A character vector of variable names from the sourced environment to be
returned to the global environment. Default = "input.variables".}

\item{passAllFunctions}{Logical; if TRUE, all global functions are passed on, otherwise only
those in input.functions.}

\item{input.functions}{A character vector of global function names to be passed on if passAllFunctions is FALSE.}

\item{returnEnv}{Logical; if TRUE, assigns the script environment to the global environment.}

\item{removeBigObjs}{Logical; if TRUE, cleans the script environment from big objects, and
return the remaing env to the global environment.}

\item{max.size}{a numeric value specifying the maximum size of an objects to keep in the env,
in bytes. Default =1e6 (1MB).}

\item{...}{Arguments to pass on to source()}
}
\value{
No return value, the function returns variables into the .GlobalEnv.
}
\description{
This function sources a script file into a new environment. It can selectively import variables
and functions from the global environment and return specified variables back to the global environment.
}
\examples{
\dontrun{
sourceClean(
  path = "path/to/your/script.R",
  input.variables = c("x"),
  output.variables = c("res"),
  passAllFunctions = TRUE,
  input.functions = NULL,
  returnEnv = TRUE
)
}
}
